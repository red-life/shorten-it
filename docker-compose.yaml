version: '3'

services:
  app:
    build: .
    container_name: shorten_it
    volumes:
      - ".env:/app/.env"
    ports:
      - "${PORT}:5000"
    restart: on-failure
    depends_on:
      - postgres
      - redis_cache
      - redis_counter

  postgres:
    image: postgres
    container_name: postgres
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USERNAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: on-failure
    environment:
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: /data/postgres
    volumes:
      - "./data/postgres:/data/postgres"

  redis_cache:
    image: redis
    container_name: redis_cache
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: on-failure
    command:
      - "redis-server"
      - "--requirepass"
      - "${REDIS_CACHE_PASSWORD}"

  redis_counter:
    image: redis
    container_name: redis_counter
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: on-failure
    command:
      - "redis-server"
      - "--requirepass"
      - "${REDIS_COUNTER_PASSWORD}"
      - "--save"
      - "1 1"
    volumes:
      - "./data/redis_counter:/data"
